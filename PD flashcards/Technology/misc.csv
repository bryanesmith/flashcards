"Cassandra","Distributed wide column NoSQL store developed at Facebook before becoming Apache project"
"Flask","Web microframework for Python"
"Dash","Python framework by Plotly for building analytical web applications"
"Dask","Python library for parallel computation"
"Docker Compose","Enables storing Docker commands in YAML config and running multiple containers"
"Hive","Apache distributed data warehouse supporting SQL syntax."
"Datadog","Aggregates production metadata like exceptions, query times, error logs, etc, and visualizes w/ alerts."
"gRPC","Google's open source RPC system. Uses Protocol Buffers."
"Interface Description Language (IDL)","Language used to specify API (e.g., OpenAPI)"
"Protocol Buffer","Google's method for serializing structured data using IDL and code generation. Supports many languages."
"Apache Avro","Hadoop RPC & data serialization framework"
"Airflow","Apache's framework to programmatically author, schedule, and monitor workflows as a DAG of tasks."
"Human-Optimized Config Object Notation (HOCON)","Human-friendly superset of JSON (e.g., comments)"
"Lightbend Config","Configuration library for JVM languages supporting HOCON"
"OpenBLAS","Open source implementation of processor-specific optimizations of linear algebra operations"
"Math Kernel Library (MKL)","Intel's implementation of math routines optimized for their processors."
"kibi (Ki)","2^10"
"mebi (Mi)","2^20"
"gibi (Gi)","2^30"
"tebi (Ti)","2^40"
"pebi (Pi)","2^50"
"Exbi (Ei)","2^60"
"unattended-upgrades","Ubuntu package that enables automatically install updated packages"
"AWS security group (SG)","Stateful firewalls applied to individual EC2 instances"
"Infrastructure, Container, Abstract services","Three types of services outlined by AWS Shared Responsibility Model"
"IAM roles","IAM entity (user, apps, services) granted set of permissions for making AWS service requests"
"VPC Network Access Control List (NACL)","Stateless firewall for controlling traffic in & out of subnet"
"EC2-Classic","Pre-VPC version of EC2 running in single, flat global network"
"VPC route table","Set of rules that determine where network traffic is directed"
"VPC Internet Gateway","Allows instances within a VPC to communicate with the internet (and vice versa)"
"Network Address Translation (NAT)","Remapping one IP address space to another."
"NAT Gateways","Placed in public subnet in order to enable instances within private subnet to initiate connections to internet (but not vice versa)"
"Pandas","Python library built on top of NumPy providing support to manipulate numerical tables and labeled arrays/time series"
"Panda DataFrame","Pandas class for manipulating numerical tables"
"Panda Series","Pandas class for manipulating labeled arrays and time series data"
"NumPy","Python library for scientific computing, providing support for high-performance multi-dimension arrays manipulation"
"NumPy ndarray","Numpy class for supporting for multi-dimension arrays"
"kubectl","Kubernetes CLI. Uses the Kubernetes API to interact with the cluster."
"Helm","Kubernetes package manager"
"Service mesh","Low-latency infrastructure layer designed to handle high volume of network-based interprocess communication via APIs"
"Istio","Open platform for managing traffic flow across microservices as an abstraction layer over cluster management platforms like Kubernetes"
"Kubernetes Pod","Smallest deployable units of computing that can be created and managed in Kubernetes. Runs on a Node."
"Martin Kleppmann", "Author of Designing Data-Intensive Applications"
"Sam Newman","Author of Building Microservices"
"Site Reliability Engineering","How Google Runs Production Systems"
"minikube","local Kubernetes cluster intended for application development"
"Master, Nodes","A Kubernetes cluster is made up of a __ and __s"
"Kubelet","An agent for managing the node and communicating with the Kubernetes master"
"rkt","A security-minded, standards-based container engine by Core OS"
"spark-submit","Used to launch Spark applications on a cluster. E.g., would invoke this via CloudWatch trigger on ECS."
"Kafka","Apache project. Publish & subscribe to streams of records. Used to move data between systems as well as transform or react to streams of data. APIs: Producer, Consumer, Streams, Connector."
"Kafka topic","In Kafka, a stream of messages of a particular type."
"Kafka brokers","In Kafka, the set of servers where published messages are stored."
"Kafka partitions","In Kafka, used to balance load for a topic. This is the level of parallelism."
"file system page cache","Cache of pages from a disk in unused portion of RAM."
"double buffering","When something is buffered redundantly at different levels."
"warm cache","When something is already loaded in cache prior to being requested."
"sendfile API","In Linux and Unix, API used to directly transfer bytes from a file channel to a socket channel, avoiding application buffer and kernel buffer."
"Kafka consumer groups","In Kafka, when one or more consumers jointly consume a set of subscribed topics, and each message is delivered to only one of the consumers."
"leaky abstraction","When an abstraction fails to hide some of the underlying implementation details"
"Conway's Law","any organization that designs a system will produce a design whose structure is a copy of the organization's communication structure."
"distutils","Older Python system for building and installing Python and non-Python modules. Not generally used directly anymore."
"setup.py","File used to declare a Python package, either using distutils or setuputils. Enables 'pip install .'"
"pyarrow","Python library for Apache Arrow"
"Apache Arrow","Library for processing columnar data, supporting Parquet, Spark, NumPy, pandas. Uses custom in-memory format."
"deterministic builds","When build system consistently produces consistent dependency management."
"pipenv","Python development workflow tool that leverages Pipfile and Pipefile.lock"
"pip freeze","Pip command to get exact versions of all user-installed modules."
"diamond dependencies","A depends on B & C, both of which depend on D."
"asyncio","Python library for async/await syntax."
"Istio","Open source mesh that works with k8s, for distributed microservices architectures. Includes telemetry, tracing, traffic management."
"default namespace (k8s)","The namespace used by default in Kubernetes."
"context (k8s)","Enables you to set a default namespace, along with other settings. Stored in ~/.kube/config"
"kubectl get pods -o yaml","Kubectl command to get list of all pods in YAML format."
"kubectl get pods my-pod -o jsonpath --tempate={.status.podIP}","Kubectl command to get the .status.podIP jsonpath for pod my-pod"
"kubectl apply -f obj.yaml","Kubectl command to create or update a resource from manifest obj.yaml"
"kubectl logs my-pod -f","Kubectl command to stream the logs for pod my-pod"
"kubectl exec -it my-pod -- bash","Kubectl command to run bash in pod my-pod"
"kubectl cp my-pod:/app/foo.txt ./foo.txt","Kubectl command to copy /app/foo.txt from pod my-pod to ./foo.txt"
"kubectl port-forward my-pod 8080:80","Kubectl command to map the port 8080 inside my-pod to external-facing port 80"
"trust policies (IAM)","Describe which principals or AWS services are allow to assume an IAM role."
"permission policies (IAM)","When attached to an IAM role, this grants access to specific actions on specific resources or services."
"roles (IAM)","An IAM entity assumed by trusted entities (person or application) that grants access to services or resources (as defined by associated policies)."
"principal entity (IAM)","A person or application (via user or role) that is authenticated using an IAM entity"
"Helm","Kubernetes package manager"
"Chart (Helm)","Name for a Helm package. Combines k8s resources and values."
"Release (Helm)","Instance of a Helm chart running in a k8s cluster."
"Helm Hub","central Helm registry of community chart repos."
"Manifest (k8s)","Declarative definitions of Kubernetes resources (e.g., Pods), usually version controlled."
"Kubelet (k8s)","Daemon process running on Kubernetes node that monitors Pod health."
"Liveness vs readiness checks (k8s)","____ determines whether a k8s pod is still functioning properly, whereas ____ determines whether a k8s pod is available yet."
"emptyDir volume (k8s)","Temporary volume scope to k8s Pods' lifespan. Survives container restarts."
"docker pull docker/whalesay","Command to download the docker/whalesay image"
"docker run docker/whalesay cowsay 'hello world'","Command to run cowsay 'hello world' in docker/whalesay container"
"docker build -t foo .","Command to build a docker image from current directory with name/tag foo"
"docker tag <source-name>[:<source-tag>] <repo>/path/<dest-name>[:<dest-tag>]","Docker command to create a tagged target image from a source image"
"docker push <repo> <name>:<tag>","Command to push Docker to a repository"
"3 steps to upload Docker image to repo","1) docker login <repo>; 2) docker tag ...; 3) docker push ..."
"Minikube","lightweight k8s implementation running on a single-node cluster inside VM on personal computer"
"Pod (k8s)","A set of 1+ k8s containers running on a single node."
"Deployment (k8s)","This is used to deploy a k8s ReplicaSet"
"ReplicaSet (k8s)","Defines a set of k8s pods, with given number of replicas"
"Service (k8s)","Exposes a set of k8s Pods (using a label selector) as a network service"
"NodePort (k8s)","Most basic type of K8s service that exposes service outside cluster"
"LoadBalancer (k8s)","Type of K8s service that creates a load balancer with public IP"
"clusterIP (k8s)","Special, stable virtual IP that K8s is able to load balance."
"ssh <ip> -L 8080:localhost:80","Command to create SSH tunnel to remote site so can access <ip>:8080 at localhost:80"
"kubelet","process running on k8s node for communicating with master node"
"network address translation (NAT)","method of remapping IP address space into another by modifying network address info in IP header of packets in transit"
"IP masquerading","Application of NAT to hide entire IP address space behind single IP address. Used to conserve IPv4 addresses."
"port forwarding","Application of NAT to redirect communication from one address & port to another."
"snowflake server","server that's manually managed, resulting in unique configurations and often difficult to manage"
"sidecar","container executing concurrently in same pod as another container"
"optimistic locking","check whether resource was updated by someone else prior to updating"
"pessimistic locking","access exclusive lock right before updating"
"Linux control groups (cgroups)","Linux kernel feature to limit & isolate resource usage for a collection of processes"
"overlay filesystem","series of filesystem layers, where each subsequent layer adds, removes, modifies files"
"multistage builds (docker)","Instead of building a single Docker image, builds several separate images. Used to avoid bloating the final image."
Amazon Prime Air,Amazon's drone service delivering up to 5lbs in 30min.
ATDD,Acceptance Test Driven Design (acronym)
WireMock,"Open Source service virtualization tool that can run within application or as standalone process. Provides HTTP stubbing, matchable on URL, header and body content patterns."
WSJF,Weighted Shortest Job First (acronym)
JPA,Java Persistance API (acronym). Specification of persisting data to/from object to db.
Spring Boot,Opinionated framework for creating stand-along Spring applications. Generates starter project.
Spring Data,"Purpose of this Spring project is to unify & ease access for Java applications to different persistance stores. Provides templating, object/data store mapping."
Agilecraft,"The old name of the project that was renamed to ""JIRA Align""."
exponential decay,"Mathematically, when quantity is subject to decrease at rate proportional to current value, based on some rate. Can be used to model tech team productivity as accumulates support, ultimately declining to zero."
WebSocket,"full-duplex communications protocol standardized by W3C designed to be compatible with HTTP, enabling communication between web browser and web server."
MSK,Managed Streaming for Kafka (acronym). Amazon's managed Kafka service.
Gradle,Multilanguage build tool using Groovy-based DSL to define DAGs of task dependencies. Adopted by Google for Android.
Maven: build lifecycle,"Made up of phases, this is the Maven process for building & distributing particular artifact."
Maven: phase,"Step in Maven lifecycle, made up of goals."
"default, clean, site",Maven's three default build-in lifecycles.
Maven: verify,Phase of Maven's default lifecycle used to enforce predefined checkstyle rules.
Maven: plugins,Artifacts that provide 1+ goals to Maven.
Maven: architype,Template used to produce working Maven project.
Surefire plugin,"Plugin used by Maven during test phase to find and run tests, generating reports in target/ directory."
POM,Project Object Model (acronym). Used for specifying Maven project.
AsciiDoc,"Format used for writing different types of docs (books, web pages, man pages, etc), often with .adoc file extension."
AsciiDoctor,Open Source toolchain for converting AsciiDoc to various formats.
AsciiDoctorJ,JVM bindings for AsciiDoctor.
JMeter,Apache Java-based load testing tool (with focus on web applications)
Fargate,AWS managed service that automatically provisions ECS or EKS resources.
Big Sur,Name for MacOS 11.4 release
goal of ZooKeeper,providing a service that mitigates the problem of coordinating processes in distributed applications
ZooKeeper: wait-free data objects,All requests to read data from servers is read locally from memory and returned immediately
linearizable writes,Guaranteed order of all write operations across nodes or threads.
Zab,Leader-based atomic broadcast protocol used by ZooKeeper for all writes.
ZooKeeper: znode,An in-memory data node in the ZooKeeper server.
ZooKeeper: slow read,"In ZooKeeper, pattern where client requests sync followed by read to ensure all outstanding writes are completed before reading data."
herd effect,"when many clients are waiting to acquire a resource (e.g., a lock), even when only one client can acquire the resource. wasteful."
ZooKeeper: leader,ZooKeeper server to which all write requests are forwarded. This server atomically broadcasts writes to all servers in cluster.
ZooKeeper: follower,"ZooKeeper server that can locally handle all read requests from memory, but forwards write requests to leader. Each client connects to only one of these for all requests."
ZooKeeper: fuzzy snapshots,"Because ZooKeeper does not lock state to take snapshots, the snapshots may be in inconsistent state. However, because data is idempotent and servers replay events since start of snapshot, not a problem."
ZooKeeper: coordination kernel,"Instead of implementing coordination primatives, ZooKeeper provides functionality to allow services to compose their own primatives."
"double buffering","Using multiple buffers (say, file page cache and head-space caching). Can be useful (e.g., graphics), or can be wasteful or unintended."
"sendfile API","API feature of Limnux to directly transfer bytes from file channel to a socket channel. Used by Kafka for efficiency."
"Kafka: consumer groups","A feature of Kafka where a group of one or more consumers jointly consume a set of subscribed topics, with each message only delivered to one consumer."
"Kafka: 4 registries stores in Zookeeper","broker registry, consumer registry, ownership registry, offset registry"
"Kafka: broker registry","Ephemeral znode in Zookeeper for storing Kafka data on each broker's host name, port, topics, and partitions."
"Kafka: consumer registry","Ephemeral znode in Zookeeper for storing Kafka data listing consumer groups and associated topics"
"Kafka: ownership registry","Ephemeral znode in Zookeeper for storing Kafka data on a given consumer group, mapping consumers to partitions"
"Kafka: offset registry","Persistent znode in Zookeeper for storing Kafka data on the offset for the last consumed message in the partition for each subscribed partition."
"CRC","Cyclic redundancy check. (acronym) Error detection code used to detect accidental changes to data."
"parameterized tests","Separate test implementation from data, mitigating test code duplication."
"cyclomatic complexity","Calculating complexity of code by counting the decision points within a block of code. Any score about 10 is considered complex."
"Gherkin","Given-When-Then language used for BDD frameworks."
"Karate library","BDD-style OSS tool to test APIs."
"database migrations","Tool-supported (e.g., Flyway) process of applying sequence of database changes consistently across all software environments."
"userscripts","Program (usually written in JavaScript) for augmenting web pages to augment browsers."
"Tampermonkey","Multi-browser plugin for running userscripts."
"Amazon EventBridge","Amazon's declarative, serverless event bus."
"ES5","ECMAScript version released in 2009. Includes (1) 'use strict', (2) various array methods, (3) JSON parse & stringify, (4) getters & setters."
"ES6","ECMAScript version released in 2015. Includes (1) classes, (2) destructuring, (3) let & const, (4) promises, (5) async await, (6) rest & spread operators, (7) big arrow functions"
"Node: http module","Node module providing both server and client functionality"
"Express","Popular minimalistic & unopinionated web framework for Node.js"
"Fan-In Layer","Layer that supports accepting a large volume of data. May be a cluster of web servers behind a load balancer."
"Hive","Apache data warehouse software facilitates reading, writing, and managing large datasets residing in distributed storage using SQL."
"lean software development","Translation of lean manufacturing principles to practices within software development domain."
"set-based design","When considering solutions, exploring multiple options and eliminating poorer choices over time, while incorporating their learnings."
"value-stream mapping","Analyzing and documenting the series of events that take product or service from beginning to customer, with the goal of eliminating waste."
"Airflow","Apache open source workflow management platform started at Airbnb in 2014"
"Backstage","Spotify's open platform for building developer portals."
"CNCF","Cloud Native Computing Foundation. (acronym) Part of Linux Foundation with the goal to foster and sustain an ecosystem of open source, vendor-neutral projects. Includes Kubernetes, Prometheus, Envoy, Argo, Backstage, etc."
"Envoy","CNCF-hosted open source high performance distributed proxy created by Lyft. Deployed with each application server, creates communication enabling applications to be unaware of network topology."
"GCP","Google Cloud Platform. (acronym)"
"gRPC","open source high performance RPC built on HTTP/2 by Google, and current a CNCF incubation project"
"HathiTrust","a partnership of academic and research institutions, offering a collection of millions of titles digitized from libraries around the world."
"Jinja","fast, expressive, extensible Python templating engine"
"multi-active database","a database cluster where all database instances can write data"
"Prometheus","open-source systems monitoring and alerting toolkit originally built at SoundCloud based on time series data"
"WSJF","Weighted shortest job first.(acronym) This relative value is equal to the absolute value divided by the size of the job."
"continuous availability","when a system high availability, but with no downtime (e.g., multi-active database)"
"gossip protocol","procedure or process of computer peer-to-peer communication that is based on the way epidemics spread."
"Samza","Apache's distributed stream processing framework"
"YARN","Hadoop's schedule & resource mgmt"
"fitting","find coefficients for model"
"scoring","Using model (including coefficients) and data to predict"
"null test","A/A test. Useful for identifying issues in deployed testing systems."
"primacy bias","when new variant in A/B test at disadvantage because experienced users unfamiliar (e.g., nav changes)"
"novelty bias","when new variant in A/B test at advantage due to newness, and not necessarily to usefulness"
"Hawthorne effect","observer effect. Individuals modify aspect of response due to awareness of being observed."
"bucket system","randomly assign users to buckets, then assign buckets to experiments"
"carryover effects","same users impacted by prior experiment are used in followup experiment, impacting behavior unrelated to test conditions"
"p13n","personalization"
"regularization","Mathematical cost term that discourages overfitting by penalizing large coefficients"
"Three sources for creating synthetic control","1) Time series data of response prior to intervention; 2) Time series that were predictive of target series prior to intervention; 3) Bayesian prior knowledge about model parameters"
"Difference-in-differences designs (DD)","Estimate the difference b/w pre-post diff in treatment group and pre-post difference in control group"
"state-space models","Models that describe the probabilistic dependence b/w latent state variable and observed measurement (i.e., how given system state translates into measurements)"
"structural time-series models","state-space models for time-series data"
"autocorrelation","correlation b/w elements of a series and others from same series separated by given interval"
"matrix decomposition","Methods that reduce matrix to constituent parts to make it easier to calculate more complex matrix operations. AKA, matrix factorization."
"Cholesky decomposition","Reduces symmetric matrix into lower-triangular matrix which, when multiplied by it's transpose, produces the original symmetric matrix. Useful for efficient numerical calculations, e.g., Monte Carlo simulations."
"Markov Decision Processes (MDP)","Used to find stationary policy that decides which action to take for given state in stochastic environment, ignoring previous states."
"exogenous factors","Factors happening outside a system."
"endogenous factors","Factors happening within a system."
"slates","AKA, asset choreography. Combination of multiple assets, the interaction effects of which result in combinatorics of action space."
"Andrej Karpathy","Taught famous Stanford class on neural networks; director of AI at Testla"
"ReLU","max(0,x). Good default choice of activation fn for neural networks because overcomes vanishing gradient problem."
"Kubeflow","Google-led k8s platform to streamline ML Systems, including various operators, pipelines, hyperparameter tuning, etc."
"Chainer","Open Source deep learning framework written in pure Python on top of NumPy and CuPy in 2015. Currently in maintenance only."
"MXNet","Apache Deep Learning framework"
"PyTorch","Python-based open source lib developed by Facebook AI Research lab."
"Seldon Core","Open source platform for rapidly deploying ML models on k8s by converting them into REST/GRPC microservices."
"adversarial examples","Inputs to ML models designed to cause the model to make mistakes. (E.g., adding noise to images to confuse CNNs.)"
"Amazon SageMaker","AWS integrated toolset for building, training, and deploying ML models."
"Amazon SageMaker Feature Store","AWS managed feature store."
"AutoML","The process of automating the tasks of applying machine learning to real-world problems."
"Augmented ML","Figuring out how a human and machine can best work together to make machine learning more effective."
"Feast","Open Source feature story created by GoJek with support from Tecton, Google, etc. Purely managed retrieval, not transformation."
"Feature encoders","Feature transformation code that can be invoked at training and scoring time."
"Feature store","Service storing batch & streaming features for both offline and online use. Often provides low-latency serving."
"Flyte","Lyft's open source, Kubernetes-native platform to increase development velocity for machine learning and data processing by abstracting away the infrastructure and data dependency management."
"Gaussian process","Probability distribution over possible functions. Sampling results in different functions, and we use Bayes' rule to update our distribution of functions based on observed data."
"GKE","Google Kubernetes Engine. (acronym) Google Cloud's managed Kubernetes service."
"Kubeflow","Google framework that implements TFX in Kubernetes."
"Kubeflow Pipelines","Kubeflow component providing platform for building & deploying portable, scalable ML workflows based on Docker containers."
"machine learning","Using data to automatically learn a function in order to make predictions."
"Metaflow","Netflix's open source human centric framework for orchestrating ML workflows, with strong AWS integration."
"Michelangelo","Uber's internal ML-as-a-service platform. Heavily leveraged OS components (HDFS, Spark, Cassandra, etc.)"
"MLOps","Set of practices at intersection of ML, DevOps, and Data Engineering."
"model serving","Process of retrieving models from model registry, features from feature store, and outputs predictions"
"Neural Architecture Search","using neural networks to design neural networks. typically, reinforcement learning or evolutionary algorithms are used to design the new neural net architectures."
"Palette","Uber/Michelangelo's (non open source) feature store, leveraging Hive for offline store and Cassandra for online store."
"parametric methods","Models that distill knowledge into sets of numbers; e.g., linear regression into two (intercept & slops); neural networks into thousands or millions."
"partitioned models","Train separate models on each partition of a dataset. (e.g., city)"
"Stitch Fix","Online personal styling service using recommendation algorithms and data science to personalize clothing items based on size, budget, and style."
"Tecton","Enterprise-ready cloud based managed feature store, by creators of Uber's Michelangelo."
"Tensorflow Data Validation","One of the first TFX components open sourced, and can be used to detect problems like skew, erroneous values, or too many nulls."
"TensorFlow eXtended (TFX)","Google's end-to-end modular platform for building & deploying TensorFlow models."
"terraform-gke-kubeflow-cluster","Spotify's open source Terraform module for creating GKE clusters for running Kubeflow."
"train-serve skew","Difference between performance of model during training & performance during serving."
"MLflow","open source end-to-end ML framework for Python and R created by Databricks, supporting logging experiments, packaging projects, packaging models, and a registry"
"MLLib","Apache Spark's scalable machine learning library."
"XGBoost","popular, open-source, multi-language software library which provides a regularizing gradient boosting framework"
